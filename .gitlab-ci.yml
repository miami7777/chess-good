variables:
  EXE_RELEASE_FOLDER: 'F:\CG\CG\CG\bin\Release'  
  TEST_FOLDER: 'F:\CG\CG\CG\Test\bin\Release'
  DEPLOY_FOLDER: 'F:\CG\CG\CG\Builds'
  NUGET_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\nuget.exe'
  MSBUILD_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\msbuild.exe'
  NUNIT_PATH: 'C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\mstest.exe'

stages:
  - build 
  - deploy

build_job:
  stage: build
  only:
    - tags  # the build process will only be started by git tag commits
  script:
    - '& "$env:NUGET_PATH" restore'  # restore Nuget dependencies
    - '& "$env:MSBUILD_PATH" /p:Configuration=Release'  # build the project  

deploy_job:
  stage: deploy
  only:
    - tags
  script:
    # Compose a folder for each release based on commit tag.
    # Assuming your tag is Rev1.0.0.1, and your last commit message is 'First commit'
    # the artifact files will be copied to:
    # P:\Projects\YourApp\Builds\Rev1.0.0.1 - First commit\
    - '$commitSubject = git log -1 --pretty=%s'
    - '$deployFolder = $($env:DEPLOY_FOLDER) + "\" + $($env:CI_COMMIT_TAG) + " - " + $commitSubject + "\"'

    # xcopy takes care of recursively creating required folders
    - 'xcopy /y ".\$env:EXE_RELEASE_FOLDER\CG.exe" "$deployFolder"'      
  dependencies:
    - build_job    
  environment: production
