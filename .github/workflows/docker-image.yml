name: myapp_Deploy

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]
    
jobs:
  production-build:
    if: github.repository == 'miami7777/chess-good'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4    
    - name: Build the Docker image
      run: docker build -t app . --file Dockerfile --tag my-image-name:$(date +%s)
      
    - name: Save Docker image as tarball
      run: docker save app -o app.tar

    - name: Verify tarball exists
      run: ls -lh app.tar
      
    - name: Change file permissions
      run: chmod 644 app.tar      
      
    - name: SSH to VPS and deploy
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_KEY }}
        before_script:
            - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
            - eval $(ssh-agent -s)
            - echo "$GITHUB_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            - mkdir -p ~/.ssh
            - chmod 700 ~/.ssh
            - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        script: |
          docker load -i /home/virtwww/${{ secrets.VPS_USER }}/http/app.tar
          if [ "$(docker ps -q -f name=app)" ]; then
            docker stop app
          fi
          if [ "$(docker ps -a -q -f name=app)" ]; then
            docker rm app
          fi
          docker run --name app -p 5177:7229 -d app