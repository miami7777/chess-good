@using CG.Domain
@using CG.Domain.Entities
@using CG.Domain.Enum
@{
    Layout = "_Layout_Course";
    ViewData["Title"] = "Создание задачи";    
}
@model Course
@await Html.PartialAsync("BreadcrumbsPartial")
<div class="content mt-3">
    <div class="animated fadeIn">


        <div class="row">
<div class="col-lg-6">
    <div class="card">
        <div class="card-header">
            <strong>Основные данные </strong> задачи
        </div>
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                    {
                        <div class="card-body card-block">
                            <div class="row form-group">
                                <div class="col col-md-3">
                                    @Html.LabelFor(model => model.TrainerId, "Автор", htmlAttributes: new { @class = "form-control-label" })
                                </div>
                                <div class="col-12 col-md-9">
                                    <p class="form-control-static">@(ViewData["user"] != null ? ((ApplicationUser)ViewData["user"]).GetFio() : "")</p>
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col col-md-3">
                                    @Html.LabelFor(model => model.Name, "Название", htmlAttributes: new { @class = "form-control-label" })
                                    </div>
                                <div class="col-12 col-md-9">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название задачи", @name = "name_course" }})
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col col-md-3">
                                    @Html.LabelFor(model => model.Description, "Описание", htmlAttributes: new { @class = "form-control-label" })
                                </div>
                                <div class="col-12 col-md-9">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Описание...", @name = "description_course", @rows = "9" })                                   
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col col-md-3">
                                    @Html.LabelFor(model => model.CategoryId, "Категория", htmlAttributes: new { @class = "form-control-label" })
                                    </div>
                                <div class="col-12 col-md-9">
                                    @Html.DropDownListFor(model => model.CategoryId,ViewData["Categories"] as SelectList,htmlAttributes: new { @class = "form-control" })                                    
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col col-md-3">
                                    @Html.LabelFor(model => model.Duration, "Длительность", htmlAttributes: new { @class = "form-control-label" })
                                    </div>
                                <div class="col-12 col-md-9">
                                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control",@min="0", @placeholder = "0",@type="number" } })                                    
                                    <small class="form-text text-muted">Введите длительность решения задачи</small>
                                </div>
                            </div>                               
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary btn-sm">
                                <i class="fa fa-dot-circle-o"></i> Добавить
                            </button>
                            <button type="reset" class="btn btn-danger btn-sm">
                                <i class="fa fa-ban"></i> Сбросить
                            </button>
                        </div>
                    }                    
                          
    </div>    
</div>           
</div>
</div>
</div>