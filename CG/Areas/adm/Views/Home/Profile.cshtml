@using CG.Domain
@using CG.Domain.Enum
@using CG.Helpers
@using CG.Models
@model UserViewModel
@{
    Layout = "_Layout_admin";
    ViewData["Title"] = "Мой профиль";
    var avatar = Model.Avatar ?? "default.jpg";
    List<ChessTitle> noTitul = new List<ChessTitle>
    {
      ChessTitle.Category1,
      ChessTitle.Category2,
      ChessTitle.Category3,
      ChessTitle.CategoryYoung3,
      ChessTitle.CategoryYoung2,
      ChessTitle.CategoryYoung1,
      ChessTitle.None
    };
    List<ChessTitle> fideOrgTitul = new List<ChessTitle>
    {
      ChessTitle.DI,
      ChessTitle.FI,
      ChessTitle.FIO,
      ChessTitle.FST,
      ChessTitle.FT,
      ChessTitle.АФ,
      ChessTitle.ИА
    };
}
@await Html.PartialAsync("BreadcrumbsPartial")

<div class="col-xl-3 col-lg-6">
    <section class="card">
        <div class="twt-feed blue-bg">
            @if (!noTitul.Contains(Model.ChessTitle))
            {
                <div class="corner-ribon black-ribon">
                    <i class="fa fa-chess">@Model.ChessTitle</i>
                </div>
            }
            <div class="fa fa-chess wtt-mark">@Model.ChessTitle</div>
            @{
                var avatarFileId = Model.AvatarFilesId;
                var img = "background: url(" + (Url.Action("DownloadThumb", "Home", new { id = avatarFileId ?? 0 }, System.Configuration.ConfigurationManager.AppSettings["httpschema"])) + ")no-repeat; background-size:cover;height:85px;width:85px);";
            }
            <div class="media"> 
                @if (avatarFileId != 0)
                {
                     <a href="#" id="selectFileUniversalPreview" class="file_up btn btn-outline-primary btn-sm">
                         <div id="avatar_user" class="file align-self-center rounded-circle mr-3" style="@(img);width:85px; height:85px;">                         
                        </div>
                    </a>
                }
                else
                {
                    <a href="#" id="selectFileUniversalPreview" class="file_up btn btn-outline-primary btn-sm"> 
                        <div id="avatar_user" class="file align-self-center rounded-circle mr-3" style="background:url(/assets/assets/img/avatar/@avatar)no-repeat; background-size:cover;height:85px;width:85px;">
                        </div> 
                    </a>
                    
                }
                <div class="media-body">
                    <h2 class="text-white display-6">@Model.FIO</h2>
                    <p class="text-light"></p>
                </div>
            </div>
            @using (Html.BeginForm("SavePreview", "Course", FormMethod.Post, new { enctype = "multipart/form-data", id = "fileuploadPreview", @class = "form-horizontal" }))
            {
                @Html.HiddenFor(model => model.Id)
                @Html.Hidden("preview", "")
                <div class="file_uploadPreview">

                    <input id="GUIDUniversalPreview" name="GUID" type="hidden" value='@Model.Id.ToString()'>
                    <input id="universal_field_idPreview" name="courseId" type="hidden" value=''>
                    <input id="errorUniversalPreview" name="error" type="hidden" value="0">

                    <input id="fileExtUniversalPreview" name="fileExt" type="hidden" value="">
                    <input id="sizeUniversalPreview" name="size" type="hidden" value="">
                    <div class="row form-group">
                        <div class="col col-md-3">
                            @* <label for="uploadedFileUniversal" class=" form-control-label">Добавить превью</label> *@
                        </div>
                        <div class="col-12 col-md-9">
                            <input id="filePathUniversalPreview" name="filePath" type="text" class="form-control" style="display:none" placeholder="Введите путь к файлу">

                            <input id="uploadedFileUniversalPreview" type="file" style="display: none;" class="form-control" accept="true">
                        </div>
                    </div>

                    <label id="downloadFileErrorUniversalPreview" class="customerror" style="display: none;"></label>
                    <label id="downloadFilesSizeErrorUniversalPreview" class="customerror" style="display: none;">Размеры картинки не подходят! Попробуйте выбрать другое изображение.</label>
                    <label id="downloadFileExceptionErrorUniversalPreview" class="customerror" style="display: none;"></label>
                    <label id="downloadFileFormatErrorUniversalPreview" class="customerror" style="display: none;"></label>
                    <div class="clear"></div>
                </div> 
            }
        </div>
        <div class="weather-category twt-category">
            <ul>
                <li class="active">
                    <h5>@(Model?.Perfs?.Blitz?.Games ?? 0)</h5>
                    Сыграно партий
                </li>
                <li>
                    <h5>@(Model?.Perfs?.Blitz?.Games ?? 0)</h5>
                    Сыграно турниров
                </li>
                <li>
                    <h5>@Model.Lessons</h5>
                    Решено задач
                </li>                
            </ul>
        </div> 
        @if (Model.ChessTitle != ChessTitle.None)
            {
                <div class="location text-sm-center">@(EnumHelper.GetDescriptionEnum(Model.ChessTitle))</div>
            }
        @if (Model.ProfileLichess != null)
        {
            var linkProfile = $"https://lichess.org/@/{@Model.ProfileLichess}";
            <div class="location text-sm-center"><a href="@linkProfile">@Model.ProfileLichess</a></div>
        }
        <div class="text-sm-center">@(Model.EmailConfirmed ? "Аккаунт подтверждён" : "Аккаунт не подтверждён")</div>
        <div class="location text-sm-center">@Model.Age</div>
        <div class="stars location text-sm-center">
            @for (var i = 1; i <= 5; i++)
            {
                if (Model.Rating >= i)
                {
                    <i class="fa fa-star" style="color:#ffc107"></i>
                }
                else
                {
                    <i class="fa fa-star-o"></i>
                }
            }
        </div>
        <div class="location text-sm-left">
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <a href="#"> <i class="fa fa-home"></i> На сайте <span class="badge badge-primary pull-right">@(UserHelper.GetPrefixAge(Model.Stag))</span></a>
                </li>
                @if (Model.ChessTitle != ChessTitle.None)
                 {
                    <li class="list-group-item">
                        <a href="#"> <i class="fa fa-tasks"></i> Звание получено <span class="badge badge-danger pull-right">@Model.YearReceiveTitle год</span></a>
                    </li>
                }
                <li class="list-group-item">
                    <a href="#"> <i class="fa fa-bell-o"></i> Турниров <span class="badge badge-success pull-right">@Model.StudentsCount</span></a>
                </li>               
            </ul>
        </div>
        <footer class="twt-footer">            
            <a href="#"><i class="fa fa-map-marker"></i></a>
            @Model.Region , @Model.City
            <span class="pull-right">
                @if (Model.LichessData == null)
                    {
                    <button id="linkLichessProfile" type="button" class="btn btn-outline-primary mb-2" onclick="LinkLichess();"><i class="fa fa-star"></i>&nbsp; Связать аккаунт с Lichess аккаунтом</button>
                }
                else
                {
                    <button id="removelinkLichessProfile" type="button" class="btn btn-outline-primary mb-2" onclick="RemoveLinkLichess();"><i class="fa fa-star"></i>&nbsp; Отвязать Lichess аккаунт</button>
                }                
                <button id="editProfile" type="button" class="btn btn-outline-primary"><i class="fa fa-star"></i>&nbsp; Редактировать</button>
            </span>             
        </footer>
    </section>    
</div>
@if (Model.Perfs != null)
{
    <section class="rating-data">
        <div class="content mt-3">
            <div class="animated fadeIn">
                <div class="row">
                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-angle-double-right text-success border-success"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Пуля</div>
                                        <div class="stat-digit">@(Model?.Perfs?.Bullet?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-arrow-right text-primary border-primary"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Блиц</div>
                                        <div class="stat-digit">@(Model?.Perfs?.Blitz?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-exchange-vertical text-warning border-warning"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Рапид</div>
                                        <div class="stat-digit">@(Model?.Perfs?.Rapid?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-angle-right text-danger border-danger"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Классика</div>
                                        <div class="stat-digit">@(Model?.Perfs?.Classical?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>           
        </div>       
    </section>
    <section class="rating-inc-data">
        <div class="content mt-3">
            <div class="animated fadeIn">
                <div class="row">
                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-angle-double-right text-success border-success"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Пуля c добавлением</div>
                                        <div class="stat-digit">@(Model?.Perfs?.BulletInc?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-arrow-right text-primary border-primary"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Блиц с добавлением</div>
                                        <div class="stat-digit">@(Model?.Perfs?.BlitzInc?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-exchange-vertical text-warning border-warning"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Рапид с добавлением</div>
                                        <div class="stat-digit">@(Model?.Perfs?.RapidInc?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6">
                        <div class="card">
                            <div class="card-body">
                                <div class="stat-widget-one">
                                    <div class="stat-icon dib"><i class="ti-angle-right text-danger border-danger"></i></div>
                                    <div class="stat-content dib">
                                        <div class="stat-text">Классика с добавлением</div>
                                        <div class="stat-digit">@(Model?.Perfs?.ClassicalInc?.Rating.ToString() ?? "")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>           
        </div>
    </section>
    @if (Model != null && Model.Roles != null && Model.Roles.Contains("Организатор"))
    {
        <a id="orgTournament" href="~/auth/GetOrgTournament">Хочу организовывать турниры</a>
    }
    @if (Model != null && !Model.EmailConfirmed)
    {
        <a id="confirmEmail" href="~/@System.Globalization.CultureInfo.CurrentCulture.Name.ToString()/account/setEmail">Подтвердить аккаунт</a>
    }
    @if (Model != null && Model.EmailConfirmed)
    {
        <a id="resetPassword" href="~/@System.Globalization.CultureInfo.CurrentCulture.Name.ToString()/account/forget">Сменить пароль</a>
    }
}
<script>
    $(document).ready(function () {
        $('#editProfile').on('click',
            function () {
                window.location.href = '@(Url.Action("EditProfile", "Home", null, System.Configuration.ConfigurationManager.AppSettings["httpschema"]))';
            });
    });
    function LinkLichess() {        
        window.location.href = '@(Url.Action("LinkLichessAccessToken", "Auth", new { prefix = "_user" }, System.Configuration.ConfigurationManager.AppSettings["httpschema"]))';
    }
    function RemoveLinkLichess() {
        window.location.href = '@(Url.Action("RemoveLinkLichess", "Auth", null, System.Configuration.ConfigurationManager.AppSettings["httpschema"]))';
    }    
</script>
<script>
    $('#selectFileUniversalPreview').click(function () {
        $('#uploadedFileUniversalPreview').trigger('click');
    });

    $('#uploadedFileUniversalPreview').change(function () {
        var file = $('#uploadedFileUniversalPreview')[0].files[0];
        if (file != null) {
            var name = file.name;
            var file = this.files[0];
            var img = new Image();

            img.onload = function () {
                var sizes = {
                    width: this.width,
                    height: this.height
                };
                $("#avatar_user").css('background-image', 'url(' + this.src + ')');
                // URL.revokeObjectURL(this.src);

                /*if ((sizes.width / sizes.height) > 1.75 && (sizes.width / sizes.height) < 1.85) {
                    $("#filePathUniversalPreview").val(name);
                    $("#downloadFilesSizeErrorUniversalPreview").hide();
                    $('#addFileUniversalPreview').attr("disabled", false);
                }
                else {
                    $("#filePathUniversalPreview").val(null);
                    $('#uploadedFileUniversalPreview').val("");
                    $("#downloadFilesSizeErrorUniversalPreview").show();
                    $('#addFileUniversalPreview').attr("disabled", true);
                }*/
                $("#filePathUniversalPreview").val(name);
                $("#downloadFilesSizeErrorUniversalPreview").hide();
                $('#addFileUniversalPreview').attr("disabled", false);
            }

            var objectURL = URL.createObjectURL(file);
            img.src = objectURL;
            ClearFileErrorUniversal('Preview');
            UploadFileInSystem('Preview');
        }
    });
    function ClearFileErrorUniversal(prefix) {
        $("#downloadFileErrorUniversal" + prefix).hide();
        // $("#downloadFilesSizeErrorUniversal" + prefix).hide();
        $("#downloadFileExceptionErrorUniversal" + prefix).hide();
        $("#downloadFileFormatErrorUniversal" + prefix).hide();
    }
    function UploadFileInSystem(prefix, index) {
        var str = ""
        if (index)
            str = "_" + index;
        document.getElementById("errorUniversal" + prefix + str).value = "0";
        var file = document.getElementById("uploadedFileUniversal" + prefix + str).files[0];
        if (file != null) {
            document.getElementById("fileExtUniversal" + prefix + str).value = file.name.split(".").pop();
            document.getElementById("sizeUniversal" + prefix + str).value = file.size;
            var fileExt = document.getElementById("fileExtUniversal" + prefix + str).value.toLowerCase();


            var maxFileSize = $("#MaxFileSize").val() * 1024;
            var maxTotalFilesSize = $("#MaxSumFileSize").val() * 1024;
            var size = document.getElementById("sizeUniversal" + prefix + str).value;
            if (size >= maxFileSize) {
                $("#downloadFileErrorUniversal" + prefix + str).show();

                document.getElementById("errorUniversal" + prefix + str).value = "1";
            }

            if (parseInt($("#totalFilesSize" + prefix + str).val()) + parseInt(size) > maxTotalFilesSize) {
                $("#downloadFileFormatErrorUniversal" + prefix + str).show();

                document.getElementById("errorUniversal" + prefix + str).value = "1";
            }
            var formData = new FormData();

            formData.append("FileUpload" + prefix + str, file);
            formData.append("AvatarFileId", document.getElementById("GUIDUniversal" + prefix + str).value);
            formData.append("error", document.getElementById("errorUniversal" + prefix + str).value);
            $.ajax({
                type: "POST",
                url: "/adm/ru/Home/FileUserUploadUniversal",
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (result) {
                    location.reload();
                },
                error: function (result) {

                    if (result.status == 400 && result.responseText != '')
                        alert(result.responseText);
                }
            });
        }
    }
    
    </script>